##------------Me managed executables-------##
export PATH=$PATH:/home/ian/.bin
# added by Miniconda3 installer
export PATH="$HOME/miniconda3/bin:$PATH"

# linuxbrew stuff
export PATH="$HOME/.linuxbrew/bin:$PATH"
export MANPATH="$HOME/.linuxbrew/share/man:$PATH"
export INFOPATH="$HOME/.linuxbrew/share/info:$INFOPATH"

##-----------------------------------------##

##------------Golang stuff-----------------##
export GOPATH=$HOME/go
export PATH=$PATH:/usr/local/go/bin
export PATH=$PATH:$HOME/go/bin
##-----------------------------------------##


##---------- Powerline go stuff -----------## 
function powerline_precmd() {
    PS1="$(powerline-go -error $? -shell zsh -modules venv,user,host,ssh,cwd,perms,git,jobs,exit,kube -shorten-gke-names)"
}

function install_powerline_precmd() {
  for s in "${precmd_functions[@]}"; do
    if [ "$s" = "powerline_precmd" ]; then
      return
    fi
  done
  precmd_functions+=(powerline_precmd)
}

if [ "$TERM" != "linux" ]; then
    install_powerline_precmd
fi
##-----------------------------------------##


##----------------Aliases------------------##
# gpg/ssh stuff
alias gpg='gpg2'
alias restart_gpg_agent='gpgconf --kill gpg-agent; killall -9 gpg-agent ; gpgconf --launch gpg-agent'

# basic shell stuff
alias ls='ls --color=auto'
alias l='ls -lah'

# kube stuff
alias ku='kubectl'
alias kug='kubectl get'

# neovim
alias vim='nvim'
alias vi='nvim'
##-----------------------------------------##


##-------------Setup gpg-agent-------------## 
GPG_TTY=$(tty)
export GPG_TTY

if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
    SSH_AUTH_SOCK=$(gpgconf --list-dirs | grep agent-socket | awk -F ':' '{ print $2".ssh" }')
    export SSH_AUTH_SOCK
fi
gpgconf --launch gpg-agent
##-----------------------------------------##


##---------------GLCOUD stuff--------------##
# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/ian/google-cloud-sdk/path.zsh.inc' ]; then source '/home/ian/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/ian/google-cloud-sdk/completion.zsh.inc' ]; then source '/home/ian/google-cloud-sdk/completion.zsh.inc'; fi
##-----------------------------------------##


##----------Shared History-----------------##

## Command history configuration
if [ -z "$HISTFILE" ]; then
    HISTFILE=$HOME/.zsh_history
fi

HISTSIZE=10000
SAVEHIST=10000

# Show history
case $HIST_STAMPS in
  "mm/dd/yyyy") alias history='fc -fl 1' ;;
  "dd.mm.yyyy") alias history='fc -El 1' ;;
  "yyyy-mm-dd") alias history='fc -il 1' ;;
  *) alias history='fc -l 1' ;;
esac

setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_dups # ignore duplication command history list
setopt hist_ignore_space
setopt hist_verify
setopt inc_append_history
setopt share_history # share command history data
##-----------------------------------------##


##----------------neovim config------------##
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

## make neovim default editor
export VISUAL=vim
export EDITOR="$VISUAL"
##-----------------------------------------##

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
