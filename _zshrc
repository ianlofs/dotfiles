# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=/home/ianlofs/.dotfiles/oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="powerlevel9k/powerlevel9k"
POWERLEVEL9K_MODE='awesome-fontconfig'
DEFAULT_USER=ianlofs
# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git fedora docker)

# POWERLEVEL9K THEME OPTIONS
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon anaconda time dir vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status)
POWERLEVEL9K_PROMPT_ON_NEWLINE=true


source $ZSH/oh-my-zsh.sh


# PATH additions
# added by Miniconda2 4.3.11 installer
export PATH="/home/ianlofs/miniconda2/bin:$PATH"
# added by Miniconda3 4.3.14 installer
export PATH="/home/ianlofs/miniconda3/bin:$PATH"
export PATH="$PATH:/usr/local/go/bin"
export PATH="$PATH:/home/ian/go/bin"
export GOPATH="$HOME/go"
export JAVA_HOME="/usr/java/jdk1.8.0_112"
export PATH="$JAVA_HOME/bin:$PATH"
export PATH="$PATH:/home/ian/apache-maven-3.3.9/bin"


# env vars
export CLOUDSDK_CONTAINER_USE_CLIENT_CERTIFICATE=True

# We only want to run gpg-agent on our local workstation. We accomplish that by trying to
# detect if this shell was spawned from ssh or not. If the SSH_CLIENT env var is set, then
# this is probably a remote login and we don't want to run gpg-agent.
GPG_TTY=$(tty); export GPG_TTY;
if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
  export SSH_AUTH_SOCK="$(gpgconf --list-dirs | grep agent-socket |  sed "s/.*://").ssh"
fi
gpg-connect-agent /bye

# aliases
alias vi="nvim"
alias vim="nvim"
alias rgpg="killall gpg-agent; gpg-agent --daemon"
alias zshconfig="vi ~/.zshrc"
alias ohmyzsh="vi ~/.oh-my-zsh"
alias starwars="telnet towel.blinkenlights.nl"


# Kubectl completions
if [ $commands[kubectl] ]; then
	source <(kubectl completion zsh)
fi

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*


# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/ianlofs/google-cloud-sdk/path.zsh.inc' ]; then source '/home/ianlofs/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/ianlofs/google-cloud-sdk/completion.zsh.inc' ]; then source '/home/ianlofs/google-cloud-sdk/completion.zsh.inc'; fi
